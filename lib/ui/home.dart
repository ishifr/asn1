import 'dart:convert';
import 'dart:io';
import 'dart:typed_data';

import 'package:asn1/asn1parser/helpers/asn1_tree_node.dart';
import 'package:asn1/asn1parser/parse_sequence_to_tree_node.dart';
import 'package:file_picker/file_picker.dart';
import 'package:flutter/material.dart';
import 'package:flutter_fancy_tree_view/flutter_fancy_tree_view.dart';

const value =
    "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";

const x509 =
    '''MIIEozCCBEmgAwIBAgIQTij3hrZsGjuULNLEDrdCpTAKBggqhkjOPQQDAjCBjzELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEYMBYGA1UEChMPU2VjdGlnbyBMaW1pdGVkMTcwNQYDVQQDEy5TZWN0aWdvIEVDQyBEb21haW4gVmFsaWRhdGlvbiBTZWN1cmUgU2VydmVyIENBMB4XDTI0MDMwNzAwMDAwMFoXDTI1MDMwNzIzNTk1OVowFTETMBEGA1UEAxMKZ2l0aHViLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABARO/Ho9XdkY1qh9mAgjOUkWmXTb05jgRulKciMVBuKB3ZHexvCdyoiCRHEMBfFXoZhWkQVMogNLo/lW215X3pGjggL+MIIC+jAfBgNVHSMEGDAWgBT2hQo7EYbhBH0Oqgss0u7MZHt7rjAdBgNVHQ4EFgQUO2g/NDr1RzTK76ZOPZq9Xm56zJ8wDgYDVR0PAQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMEkGA1UdIARCMEAwNAYLKwYBBAGyMQECAgcwJTAjBggrBgEFBQcCARYXaHR0cHM6Ly9zZWN0aWdvLmNvbS9DUFMwCAYGZ4EMAQIBMIGEBggrBgEFBQcBAQR4MHYwTwYIKwYBBQUHMAKGQ2h0dHA6Ly9jcnQuc2VjdGlnby5jb20vU2VjdGlnb0VDQ0RvbWFpblZhbGlkYXRpb25TZWN1cmVTZXJ2ZXJDQS5jcnQwIwYIKwYBBQUHMAGGF2h0dHA6Ly9vY3NwLnNlY3RpZ28uY29tMIIBgAYKKwYBBAHWeQIEAgSCAXAEggFsAWoAdwDPEVbu1S58r/OHW9lpLpvpGnFnSrAX7KwB0lt3zsw7CAAAAY4WOvAZAAAEAwBIMEYCIQD7oNz/2oO8VGaWWrqrsBQBzQH0hRhMLm11oeMpg1fNawIhAKWc0q7Z+mxDVYV/6ov7f/i0H/aAcHSCIi/QJcECraOpAHYAouMK5EXvva2bfjjtR2d3U9eCW4SU1yteGyzEuVCkR+cAAAGOFjrv+AAABAMARzBFAiEAyupEIVAMk0c8BVVpF0QbisfoEwy5xJQKQOe8EvMU4W8CIGAIIuzjxBFlHpkqcsa7UZy24y/B6xZnktUw/Ne5q5hCAHcATnWjJ1yaEMM4W2zU3z9S6x3w4I4bjWnAsfpksWKaOd8AAAGOFjrv9wAABAMASDBGAiEA+8OvQzpgRf31uLBsCE8ktCUfvsiRT7zWSqeXliA09TUCIQDcB7Xn97aEDMBKXIbdm5KZ9GjvRyoF9skD5/4GneoMWzAlBgNVHREEHjAcggpnaXRodWIuY29tgg53d3cuZ2l0aHViLmNvbTAKBggqhkjOPQQDAgNIADBFAiEAru2McPr0eNwcWNuDEY0a/rGzXRfRrm+6XfZeSzhYZewCIBq4TUEBCgapv7xvAtRKdVdi/b4m36Uyej1ggyJsiesA''';

class Home extends StatefulWidget {
  const Home({super.key});

  @override
  State<Home> createState() => _HomeState();
}

class _HomeState extends State<Home> {
  var treeController = TreeController<Asn1TreeNode>(
    roots: [parseSequenceToTreeNode(Uint8List(4))],
    childrenProvider: (Asn1TreeNode node) => node.children,
  );
  @override
  Widget build(BuildContext context) {
    treeController.expandAll();
    return Scaffold(
      appBar: AppBar(title: const Text("ASN1"), actions: [
        InkWell(
            onTap: () async {
              FilePickerResult? result = await FilePicker.platform.pickFiles();
              if (result != null) {
                File file = File(result.files.single.path!);
                await for (var i in file.openRead()) {
                  print("This is File:${base64.encode(Uint8List.fromList(i))}");
                  treeController = TreeController<Asn1TreeNode>(
                    roots: [
                      parseSequenceToTreeNode(
                          Uint8List.fromList(i))
                    ],
                    childrenProvider: (Asn1TreeNode node) => node.children,
                  );
                  setState(() {});
                }
              } else {
                // User canceled the picker
              }
            },
            child: const Padding(
                padding: EdgeInsets.all(8.0), child: Text("File"))),
        InkWell(
            onTap: () {},
            child: const Padding(
                padding: EdgeInsets.all(8.0), child: Text("Collapse")))
      ]),
      body: AnimatedTreeView<Asn1TreeNode>(
        padding: const EdgeInsets.all(6),
        treeController: treeController,
        nodeBuilder: (BuildContext context, TreeEntry<Asn1TreeNode> entry) {
          return InkWell(
            onTap: () => treeController.toggleExpansion(entry.node),
            child: TreeIndentation(
              entry: entry,
              child: SelectableText(entry.node.text),
            ),
          );
        },
      ),
    );
  }
}
